@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --meandu-brand: #c8ff00;
    --darkgreen: #1B2727;
    --lightgray: #d1d5db;
    --gray: #6b7280;
    
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;

    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;
 
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;
 
    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;
 
    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;
 
    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;
 
    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;
 
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;
 
    --radius: 0.5rem;
  }
 
  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
 
    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;
 
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
 
    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;
 
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
 
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
 
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
 
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
 
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
  }
}
 
@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

@layer components {
  .meandu-button {
    @apply inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-full text-sm font-medium bg-meandubrand text-darkgreen py-2 px-6 hover:bg-meandubrand/90 hover:shadow-lg hover:-translate-y-1 transition-all duration-300;
  }
  
  .premium-shadow {
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
  }
}

.bg-darkgreen {
  background-color: var(--darkgreen);
}

.bg-meandubrand {
  background-color: var(--meandu-brand);
}

.text-meandubrand {
  color: var(--meandu-brand);
}

.text-darkgreen {
  color: var(--darkgreen);
}

.border-meandubrand {
  border-color: var(--meandu-brand);
}

.stroke-meandubrand {
  stroke: var(--meandu-brand);
}

/* Animation for the order form slide-in */
.animate-slide-in {
  animation: slideIn 0.5s ease-out forwards;
}

@keyframes slideIn {
  from {
    transform: translateX(-20px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

.acrylic-thickness::before {
  content: '';
  position: absolute;
  inset: 0;
  bottom: -12px;
  z-index: -1;
  border-bottom: 12px solid rgba(220, 220, 220, 0.8); /* Lighter and more opaque edge */
  background: linear-gradient(
    to bottom,
    rgba(255, 255, 255, 0.5),
    rgba(200, 200, 200, 0.7)
  ); /* Stronger gradient for acrylic reflection */
  border-radius: inherit;
  box-shadow: 0 12px 25px rgba(50, 50, 50, 0.5); /* Lighter shadow for visibility */
}

/* Hide all resize handles by default */
.react-resizable-handle {
  display: none;
}

/* Show handles only when the component is active */
.resizable-active .react-resizable-handle {
  display: block;
}

/* Corner handles (northeast, southeast, southwest, northwest) - small circles */
.resizable-active .react-resizable-handle-ne,
.resizable-active .react-resizable-handle-se,
.resizable-active .react-resizable-handle-sw,
.resizable-active .react-resizable-handle-nw {
  width: 10px;
  height: 10px;
  background-color: black;
  border-radius: 50%;
  position: absolute;
}

.resizable-active .react-resizable-handle-ne {
  top: -1px; /* Center dot on the corner of the border (padding 2px + border 2px - half of dot 5px) */
  right: -1px;
  cursor: ne-resize;
}

.resizable-active .react-resizable-handle-se {
  bottom: -1px;
  right: -1px;
  cursor: se-resize;
}

.resizable-active .react-resizable-handle-sw {
  bottom: -1px;
  left: -1px;
  cursor: sw-resize;
}

.resizable-active .react-resizable-handle-nw {
  top: -1px;
  left: -1px;
  cursor: nw-resize;
}

/* Ensure the parent doesn't clip the handle */
.react-resizable {
  position: relative;
  overflow: visible !important;
}

/* Prevent the draggable parent from capturing resize events */
.resizable-container {
  position: relative;
  display: inline-block;
}

/* Drag handle styles */
.drag-handle {
  cursor: move;
  width: 100%; /* Ensure the drag handle stretches to the full width of the content */
  height: 100%; /* Ensure the drag handle stretches to the full height of the content */
  display: block; /* Ensure the drag handle is a block element to take full width */
  padding: 2px; /* Side padding */
  padding-top: 4px; /* Custom top padding */
  padding-bottom: 4px; /* Custom bottom padding */
}

/* Active state (when selected) */
.drag-handle.active {
  border: 2px solid #1E90FF; /* Custom color (dodgerblue) */
  border-radius: 8px; /* Custom border radius */
}

/* Hover state */
.drag-handle:hover:not(.active) {
  border: 2px solid #1E90FF; /* Same color as active state */
  border-radius: 8px;
}

/* Smooth dragging and resizing */
.drag-handle,
.react-resizable {
  will-change: transform;
  transition: none; /* Prevent layout shifts */
}

/* Ensure the inner content doesn't shrink the drag handle */
.drag-handle > * {
  display: block;
}

/* Prevent default drag behavior on images */
.drag-handle img {
  -webkit-user-drag: none;
  user-drag: none;
}